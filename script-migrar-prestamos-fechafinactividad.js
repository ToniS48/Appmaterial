/**
 * SCRIPT DE MIGRACI√ìN: A√±adir campo fechaFinActividad a pr√©stamos existentes
 * 
 * Este script migra los pr√©stamos existentes para a√±adir el campo optimizado
 * fechaFinActividad, que simplifica la detecci√≥n de actividades finalizadas.
 * 
 * EJECUTAR DESDE CONSOLA DEL NAVEGADOR:
 * 1. Abrir herramientas de desarrollador (F12)
 * 2. Ir a la pesta√±a Console
 * 3. Copiar y pegar este script
 * 4. Ejecutar la funci√≥n: migrarPrestamosConFechaFinActividad()
 */

// Funci√≥n principal de migraci√≥n
async function migrarPrestamosConFechaFinActividad() {
    console.log('üöÄ Iniciando migraci√≥n de pr√©stamos para a√±adir fechaFinActividad...');
    
    try {
        // Verificar que Firebase est√© disponible
        if (!window.firebase || !window.firebase.firestore) {
            throw new Error('Firebase no est√° disponible. Aseg√∫rate de estar en la aplicaci√≥n.');
        }
        
        const db = window.firebase.firestore();
        console.log('‚úÖ Conexi√≥n a Firebase establecida');
        
        // PASO 1: Obtener todos los pr√©stamos que tienen actividadId pero no fechaFinActividad
        console.log('üìã Obteniendo pr√©stamos para migrar...');
        
        const prestamosQuery = await db.collection('prestamos')
            .where('actividadId', '!=', null)
            .get();
        
        console.log(`üìä Pr√©stamos encontrados con actividad: ${prestamosQuery.size}`);
        
        if (prestamosQuery.empty) {
            console.log('‚úÖ No hay pr√©stamos para migrar');
            return;
        }
        
        // PASO 2: Procesar cada pr√©stamo
        let prestamosActualizados = 0;
        let errores = 0;
        
        console.log('üîÑ Iniciando procesamiento...');
        
        for (const prestamoDoc of prestamosQuery.docs) {
            const prestamoData = prestamoDoc.data();
            const prestamoId = prestamoDoc.id;
            
            // Verificar si ya tiene fechaFinActividad
            if (prestamoData.fechaFinActividad) {
                console.log(`‚è≠Ô∏è Pr√©stamo ${prestamoId} ya tiene fechaFinActividad, saltando...`);
                continue;
            }
            
            console.log(`üîß Procesando pr√©stamo: ${prestamoId} (actividad: ${prestamoData.actividadId})`);
            
            try {
                // Obtener informaci√≥n de la actividad
                const actividadDoc = await db.collection('actividades')
                    .doc(prestamoData.actividadId)
                    .get();
                
                if (!actividadDoc.exists) {
                    console.warn(`‚ö†Ô∏è Actividad ${prestamoData.actividadId} no encontrada para pr√©stamo ${prestamoId}`);
                    errores++;
                    continue;
                }
                
                const actividadData = actividadDoc.data();
                
                // Verificar que la actividad tenga fechaFin
                if (!actividadData.fechaFin) {
                    console.warn(`‚ö†Ô∏è Actividad ${prestamoData.actividadId} no tiene fechaFin`);
                    errores++;
                    continue;
                }
                
                // Actualizar el pr√©stamo con fechaFinActividad
                await db.collection('prestamos').doc(prestamoId).update({
                    fechaFinActividad: actividadData.fechaFin
                });
                
                prestamosActualizados++;
                console.log(`‚úÖ Pr√©stamo ${prestamoId} actualizado (${prestamosActualizados}/${prestamosQuery.size})`);
                
            } catch (error) {
                console.error(`‚ùå Error procesando pr√©stamo ${prestamoId}:`, error);
                errores++;
            }
        }
        
        // PASO 3: Resumen final
        console.log('\nüéâ MIGRACI√ìN COMPLETADA');
        console.log(`üìä Estad√≠sticas:`);
        console.log(`  ‚úÖ Pr√©stamos actualizados: ${prestamosActualizados}`);
        console.log(`  ‚ùå Errores: ${errores}`);
        console.log(`  üìã Total procesados: ${prestamosQuery.size}`);
        
        if (errores > 0) {
            console.warn(`‚ö†Ô∏è Se encontraron ${errores} errores durante la migraci√≥n`);
        } else {
            console.log('üéâ ¬°Migraci√≥n completada exitosamente sin errores!');
        }
        
    } catch (error) {
        console.error('‚ùå Error durante la migraci√≥n:', error);
        throw error;
    }
}

// Funci√≥n para verificar la migraci√≥n
async function verificarMigracion() {
    console.log('üîç Verificando estado de la migraci√≥n...');
    
    try {
        const db = window.firebase.firestore();
        
        // Contar pr√©stamos con actividad
        const prestamosConActividad = await db.collection('prestamos')
            .where('actividadId', '!=', null)
            .get();
        
        // Contar pr√©stamos con fechaFinActividad
        const prestamosConFechaFin = await db.collection('prestamos')
            .where('fechaFinActividad', '!=', null)
            .get();
        
        console.log('üìä Estado de la migraci√≥n:');
        console.log(`  üìã Pr√©stamos con actividad: ${prestamosConActividad.size}`);
        console.log(`  ‚úÖ Pr√©stamos con fechaFinActividad: ${prestamosConFechaFin.size}`);
        
        const pendientes = prestamosConActividad.size - prestamosConFechaFin.size;
        console.log(`  ‚è≥ Pr√©stamos pendientes de migrar: ${pendientes}`);
        
        if (pendientes === 0) {
            console.log('üéâ ¬°Todos los pr√©stamos est√°n migrados!');
        } else {
            console.log(`‚ö†Ô∏è Quedan ${pendientes} pr√©stamos por migrar`);
        }
        
    } catch (error) {
        console.error('‚ùå Error verificando migraci√≥n:', error);
    }
}

// Hacer funciones disponibles globalmente
window.migrarPrestamosConFechaFinActividad = migrarPrestamosConFechaFinActividad;
window.verificarMigracion = verificarMigracion;

console.log('üìã Script de migraci√≥n cargado. Funciones disponibles:');
console.log('  ‚Ä¢ migrarPrestamosConFechaFinActividad() - Ejecutar migraci√≥n');
console.log('  ‚Ä¢ verificarMigracion() - Verificar estado');
