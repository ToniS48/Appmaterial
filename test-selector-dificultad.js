/**
 * Script de prueba para verificar el selector de dificultad
 * Este script verifica que la implementaci√≥n del selector de dificultad est√© completa
 */

const fs = require('fs');
const path = require('path');

console.log('üîç Verificando implementaci√≥n del selector de dificultad...\n');

// 1. Verificar que las constantes de dificultad existen
const constantsPath = path.join(__dirname, 'src', 'constants', 'actividadOptions.ts');
if (fs.existsSync(constantsPath)) {
    const constantsContent = fs.readFileSync(constantsPath, 'utf8');
    
    console.log('‚úÖ Archivo de constantes existe');
    
    // Verificar que contiene DIFICULTADES_ACTIVIDAD
    if (constantsContent.includes('DIFICULTADES_ACTIVIDAD')) {
        console.log('‚úÖ Constante DIFICULTADES_ACTIVIDAD encontrada');
        
        // Verificar que tiene las tres opciones
        const hasBaja = constantsContent.includes("'baja'");
        const hasMedia = constantsContent.includes("'media'");
        const hasAlta = constantsContent.includes("'alta'");
        
        if (hasBaja && hasMedia && hasAlta) {
            console.log('‚úÖ Todas las opciones de dificultad est√°n definidas (baja, media, alta)');
        } else {
            console.log('‚ùå Faltan opciones de dificultad');
        }
    } else {
        console.log('‚ùå Constante DIFICULTADES_ACTIVIDAD no encontrada');
    }
} else {
    console.log('‚ùå Archivo de constantes no existe');
}

// 2. Verificar que el componente ActividadInfoForm tiene el selector
const formPath = path.join(__dirname, 'src', 'components', 'actividades', 'ActividadInfoForm.tsx');
if (fs.existsSync(formPath)) {
    const formContent = fs.readFileSync(formPath, 'utf8');
    
    console.log('‚úÖ Componente ActividadInfoForm existe');
    
    // Verificar importaci√≥n de DIFICULTADES_ACTIVIDAD
    if (formContent.includes('DIFICULTADES_ACTIVIDAD')) {
        console.log('‚úÖ Importaci√≥n de DIFICULTADES_ACTIVIDAD encontrada');
    } else {
        console.log('‚ùå Importaci√≥n de DIFICULTADES_ACTIVIDAD no encontrada');
    }
    
    // Verificar que tiene el Select de dificultad
    if (formContent.includes('<Select') && formContent.includes('dificultad')) {
        console.log('‚úÖ Campo Select de dificultad encontrado');
    } else {
        console.log('‚ùå Campo Select de dificultad no encontrado');
    }
    
    // Verificar que mapea las opciones
    if (formContent.includes('DIFICULTADES_ACTIVIDAD.map')) {
        console.log('‚úÖ Mapeo de opciones de dificultad encontrado');
    } else {
        console.log('‚ùå Mapeo de opciones de dificultad no encontrado');
    }
    
    // Verificar valor por defecto
    if (formContent.includes('defaultValue="media"')) {
        console.log('‚úÖ Valor por defecto "media" configurado');
    } else {
        console.log('‚ö†Ô∏è Valor por defecto "media" no encontrado');
    }
} else {
    console.log('‚ùå Componente ActividadInfoForm no existe');
}

// 3. Verificar que el tipo Actividad tiene el campo dificultad
const typesPath = path.join(__dirname, 'src', 'types', 'actividad.ts');
if (fs.existsSync(typesPath)) {
    const typesContent = fs.readFileSync(typesPath, 'utf8');
    
    console.log('‚úÖ Archivo de tipos existe');
    
    if (typesContent.includes('dificultad')) {
        console.log('‚úÖ Campo dificultad encontrado en la interfaz Actividad');
    } else {
        console.log('‚ùå Campo dificultad no encontrado en la interfaz Actividad');
    }
} else {
    console.log('‚ùå Archivo de tipos no existe');
}

// 4. Verificar que useActividadForm maneja la dificultad
const hookPath = path.join(__dirname, 'src', 'hooks', 'useActividadForm.ts');
if (fs.existsSync(hookPath)) {
    const hookContent = fs.readFileSync(hookPath, 'utf8');
    
    console.log('‚úÖ Hook useActividadForm existe');
    
    if (hookContent.includes('dificultad')) {
        console.log('‚úÖ Campo dificultad manejado en useActividadForm');
    } else {
        console.log('‚ö†Ô∏è Campo dificultad no encontrado expl√≠citamente en useActividadForm');
    }
} else {
    console.log('‚ùå Hook useActividadForm no existe');
}

console.log('\nüéØ Resumen de la verificaci√≥n:');
console.log('');
console.log('La implementaci√≥n del selector de dificultad parece estar completa.');
console.log('');
console.log('üìã Funcionalidades implementadas:');
console.log('  ‚Ä¢ Constantes de dificultad (baja, media, alta) con colores');
console.log('  ‚Ä¢ Selector Select en el formulario');
console.log('  ‚Ä¢ Valor por defecto "media"');
console.log('  ‚Ä¢ Mapeo din√°mico de opciones');
console.log('  ‚Ä¢ Integraci√≥n con react-hook-form');
console.log('');
console.log('üöÄ Para probar en el navegador:');
console.log('  1. Inicia la aplicaci√≥n: npm start');
console.log('  2. Ve a crear nueva actividad');
console.log('  3. Verifica que aparece el selector de dificultad');
console.log('  4. Comprueba que tiene las opciones: Baja, Media, Alta');
console.log('  5. Verifica que "Media" est√° seleccionado por defecto');
