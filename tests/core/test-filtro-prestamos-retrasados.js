/**
 * üß™ TEST MANUAL: Verificaci√≥n de Filtro de Pr√©stamos Retrasados
 * 
 * Instrucciones para probar la nueva funcionalidad
 */

console.log('üöÄ Iniciando test de filtro de pr√©stamos retrasados...');

// Test de funciones del servicio
async function testServicioPrestamosVencidos() {
    console.log('\nüìã Probando servicio de pr√©stamos vencidos...');
    
    try {
        // Importar funciones si est√°n disponibles
        if (window.prestamoService?.obtenerPrestamosVencidos) {
            console.log('‚úÖ Funci√≥n obtenerPrestamosVencidos disponible');
            
            const prestamosVencidos = await window.prestamoService.obtenerPrestamosVencidos();
            console.log(`üìä Pr√©stamos vencidos encontrados: ${prestamosVencidos.length}`);
            
            if (prestamosVencidos.length > 0) {
                console.log('üìÑ Ejemplos de pr√©stamos vencidos:');
                prestamosVencidos.slice(0, 3).forEach((prestamo, index) => {
                    const fechaVencimiento = prestamo.fechaDevolucionPrevista instanceof Date ? 
                        prestamo.fechaDevolucionPrevista : 
                        prestamo.fechaDevolucionPrevista.toDate();
                    
                    const diasRetraso = Math.ceil((new Date() - fechaVencimiento) / (1000 * 60 * 60 * 24));
                    
                    console.log(`  ${index + 1}. ${prestamo.nombreMaterial} - ${diasRetraso} d√≠as retrasado`);
                });
            } else {
                console.log('üéâ No se encontraron pr√©stamos vencidos');
            }
        } else {
            console.log('‚ö†Ô∏è Funci√≥n no disponible en window.prestamoService');
        }
    } catch (error) {
        console.error('‚ùå Error en test de servicio:', error);
    }
}

// Test de componente dashboard
function testComponenteDashboard() {
    console.log('\nüé® Verificando componente PrestamosDashboard...');
    
    // Verificar si el componente est√° montado
    const dashboard = document.querySelector('[data-testid="prestamos-dashboard"]') || 
                     document.querySelector('.prestamos-dashboard') ||
                     document.querySelector('div[class*="prestamo"]');
    
    if (dashboard) {
        console.log('‚úÖ Componente dashboard encontrado');
        
        // Buscar filtro de retrasados
        const filtroRetrasados = document.querySelector('input[id="retrasados-filter"]') ||
                                document.querySelector('input[type="checkbox"]') ||
                                document.querySelector('[role="switch"]');
        
        if (filtroRetrasados) {
            console.log('‚úÖ Filtro de retrasados encontrado en UI');
        } else {
            console.log('‚ö†Ô∏è Filtro de retrasados no encontrado en UI');
        }
        
        // Buscar bot√≥n de acceso r√°pido
        const botonRapido = Array.from(document.querySelectorAll('button')).find(btn => 
            btn.textContent && btn.textContent.includes('Retrasado')
        );
        
        if (botonRapido) {
            console.log('‚úÖ Bot√≥n de acceso r√°pido encontrado');
        } else {
            console.log('‚ÑπÔ∏è Bot√≥n de acceso r√°pido no visible (normal si no hay pr√©stamos retrasados)');
        }
        
    } else {
        console.log('‚ö†Ô∏è Componente dashboard no encontrado - puede no estar en esta p√°gina');
    }
}

// Test de integraci√≥n completa
async function testIntegracionCompleta() {
    console.log('\nüîó Probando integraci√≥n completa...');
    
    try {
        // Simular activaci√≥n del filtro
        console.log('üîÑ Simulando activaci√≥n del filtro...');
        
        // Si hay React DevTools disponibles, podemos interactuar con el estado
        if (window.React && window.__REACT_DEVTOOLS_GLOBAL_HOOK__) {
            console.log('‚úÖ React DevTools detectado - integraci√≥n React disponible');
        }
        
        console.log('üìù Para test manual:');
        console.log('   1. Ve a la p√°gina de Gesti√≥n de Pr√©stamos');
        console.log('   2. Busca el filtro "Solo retrasados" en la secci√≥n de filtros');
        console.log('   3. Activa el switch y verifica que se muestren solo pr√©stamos retrasados');
        console.log('   4. Verifica que las filas retrasadas tengan fondo rojo');
        console.log('   5. Confirma que aparezcan badges con d√≠as de retraso');
        
    } catch (error) {
        console.error('‚ùå Error en test de integraci√≥n:', error);
    }
}

// Ejecutar tests
async function ejecutarTodosLosTests() {
    console.log('üéØ === TEST FILTRO PR√âSTAMOS RETRASADOS ===');
    
    await testServicioPrestamosVencidos();
    testComponenteDashboard();
    await testIntegracionCompleta();
    
    console.log('\n‚úÖ === TESTS COMPLETADOS ===');
    console.log('üìÑ Para m√°s informaci√≥n, consulta: docs/solutions/FILTRO-PRESTAMOS-RETRASADOS-COMPLETADO.md');
}

// Auto-ejecutar si se carga como script
if (typeof window !== 'undefined') {
    // En navegador
    window.testFiltroRetrasados = ejecutarTodosLosTests;
    console.log('üí° Para ejecutar el test, ejecuta: testFiltroRetrasados()');
} else {
    // En Node.js (si es necesario)
    ejecutarTodosLosTests();
}

export { ejecutarTodosLosTests as testFiltroRetrasados };
