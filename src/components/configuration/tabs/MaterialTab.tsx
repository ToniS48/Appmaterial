import React, { useState } from 'react';
import {
  Box,
  VStack,
  Alert,
  AlertIcon,
  Text,
  TabPanel,
  Card,
  CardBody,
  Heading,
  FormControl,
  FormLabel,
  Select,
  SimpleGrid,
  Divider,
  Collapse,
  HStack,
  IconButton
} from '@chakra-ui/react';
import { ChevronDownIcon, ChevronRightIcon } from '@chakra-ui/icons';
import { ConfigSettings } from '../../../types/configuration';
import DropdownsTab from './DropdownsTab';

interface MaterialTabProps {
  settings: ConfigSettings;
  userRole: 'admin' | 'vocal';
  onVariableChange: (key: string, value: any) => void;
}

/**
 * Pesta침a de Gesti칩n de Material
 * Contiene configuraciones espec칤ficas para el manejo de material del club
 */
const MaterialTab: React.FC<MaterialTabProps> = ({
  settings,
  userRole,
  onVariableChange
}) => {
  // Estado para mostrar/ocultar los banners
  const [showInfo, setShowInfo] = useState(true);
  const [showWarning, setShowWarning] = useState(false);

  return (
    <TabPanel>
      <VStack spacing={8} align="stretch">
        {/* Banner informativo general colapsable */}
        <Alert status="info" cursor="pointer" p={0}>
          <Box w="100%">
            <HStack px={4} py={2} userSelect="none">
              <AlertIcon />
              <Text fontWeight="bold" flex={1} onClick={() => setShowInfo((v) => !v)} _hover={{ textDecoration: 'underline' }}>
                Configuraci칩n de Material
              </Text>
              <IconButton
                aria-label={showInfo ? 'Ocultar info' : 'Mostrar info'}
                icon={showInfo ? <ChevronDownIcon /> : <ChevronRightIcon />}
                size="sm"
                variant="ghost"
                tabIndex={-1}
                pointerEvents="none"
              />
            </HStack>
            <Collapse in={showInfo} animateOpacity>
              <Box px={4} pb={3}>
                <Text>
                  Gestiona los par치metros espec칤ficos para el material del club, incluyendo stock m칤nimo, revisiones peri칩dicas y tiempo entre pr칠stamos. Las configuraciones detalladas de formularios de material est치n disponibles en la secci칩n inferior (solo para administradores).
                </Text>
              </Box>
            </Collapse>
          </Box>
        </Alert>

        {/* Configuraci칩n de Stock y Mantenimiento */}
        <Card>
          <CardBody>
            <Heading size="sm" mb={4} color="blue.600">
              游닍 Gesti칩n de Stock y Mantenimiento
            </Heading>
            <SimpleGrid columns={{ base: 1, md: 2 }} spacing={4}>
              <FormControl>
                <FormLabel fontSize="sm">Porcentaje m칤nimo de stock</FormLabel>
                <Select
                  value={settings.variables.porcentajeStockMinimo}
                  onChange={(e) => onVariableChange('porcentajeStockMinimo', parseInt(e.target.value))}
                >
                  <option value="10">10%</option>
                  <option value="15">15%</option>
                  <option value="20">20%</option>
                  <option value="25">25%</option>
                  <option value="30">30%</option>
                </Select>
                <Text fontSize="xs" color="gray.600" mt={1}>
                  Porcentaje m칤nimo de stock antes de alerta
                </Text>
              </FormControl>

              <FormControl>
                <FormLabel fontSize="sm">D칤as de revisi칩n peri칩dica</FormLabel>
                <Select
                  value={settings.variables.diasRevisionPeriodica}
                  onChange={(e) => onVariableChange('diasRevisionPeriodica', parseInt(e.target.value))}
                >
                  <option value="90">90 d칤as (3 meses)</option>
                  <option value="180">180 d칤as (6 meses)</option>
                  <option value="365">365 d칤as (1 a침o)</option>
                </Select>
                <Text fontSize="xs" color="gray.600" mt={1}>
                  Frecuencia de revisi칩n peri칩dica del material
                </Text>
              </FormControl>

              <FormControl>
                <FormLabel fontSize="sm">Tiempo m칤nimo entre pr칠stamos</FormLabel>
                <Select
                  value={settings.variables.tiempoMinimoEntrePrestamos}
                  onChange={(e) => onVariableChange('tiempoMinimoEntrePrestamos', parseInt(e.target.value))}
                >
                  <option value="0">Sin restricci칩n</option>
                  <option value="1">1 d칤a</option>
                  <option value="2">2 d칤as</option>
                  <option value="7">7 d칤as</option>
                </Select>
                <Text fontSize="xs" color="gray.600" mt={1}>
                  Tiempo m칤nimo entre pr칠stamos del mismo material
                </Text>
              </FormControl>

              <FormControl>
                <FormLabel fontSize="sm">D칤as de antelaci칩n para revisi칩n</FormLabel>
                <Select
                  value={settings.variables.diasAntelacionRevision}
                  onChange={(e) => onVariableChange('diasAntelacionRevision', parseInt(e.target.value))}
                >
                  <option value="15">15 d칤as antes</option>
                  <option value="30">30 d칤as antes</option>
                  <option value="60">60 d칤as antes</option>
                  <option value="90">90 d칤as antes</option>
                </Select>
                <Text fontSize="xs" color="gray.600" mt={1}>
                  D칤as de antelaci칩n para recordar revisi칩n de material
                </Text>
              </FormControl>
            </SimpleGrid>
          </CardBody>
        </Card>

        {/* Formularios Material - Solo para administradores */}
        {userRole === 'admin' && (
          <>
            <Divider />
            <Card>
              <CardBody>
                <Heading size="sm" mb={4} color="orange.600">
                  游늶 Formularios Material
                </Heading>
                {/* Banner de advertencia colapsable solo para admins */}
                <Alert status="warning" cursor="pointer" p={0}>
                  <Box w="100%">
                    <HStack px={4} py={2} userSelect="none">
                      <AlertIcon />
                      <Text fontWeight="bold" flex={1} onClick={() => setShowWarning((v) => !v)} _hover={{ textDecoration: 'underline' }}>
                        Atenci칩n: Solo administradores
                      </Text>
                      <IconButton
                        aria-label={showWarning ? 'Ocultar advertencia' : 'Mostrar advertencia'}
                        icon={showWarning ? <ChevronDownIcon /> : <ChevronRightIcon />}
                        size="sm"
                        variant="ghost"
                        tabIndex={-1}
                        pointerEvents="none"
                      />
                    </HStack>
                    <Collapse in={showWarning} animateOpacity>
                      <Box px={4} pb={3}>
                        <Text fontSize="sm">
                          Esta secci칩n permite configurar los formularios din치micos para la gesti칩n de material. Solo los administradores pueden modificar estos par치metros.
                        </Text>
                      </Box>
                    </Collapse>
                  </Box>
                </Alert>
                {/* Integrar el componente DropdownsTab aqu칤 */}
                <DropdownsTab settings={settings} userRole={userRole} />
              </CardBody>
            </Card>
          </>
        )}
      </VStack>
    </TabPanel>
  );
};

export default MaterialTab;
