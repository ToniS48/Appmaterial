import React from 'react';
import {
  Card,
  CardBody,
  Heading,
  FormControl,
  FormLabel,
  Select,
  Text,
  SimpleGrid
} from '@chakra-ui/react';
import { ConfigSettings } from '../../../types/configuration';

interface LoanManagementSectionProps {
  settings: ConfigSettings;
  userRole: 'admin' | 'vocal';
  onVariableChange: (key: string, value: any) => void;
}

/**
 * Secci√≥n de Gesti√≥n de Pr√©stamos y Devoluciones
 */
const LoanManagementSection: React.FC<LoanManagementSectionProps> = ({
  settings,
  userRole,
  onVariableChange
}) => {
  return (
    <Card>
      <CardBody>
        <Heading size="sm" mb={4} color="blue.600">
          üì¶ Gesti√≥n de Pr√©stamos y Devoluciones
        </Heading>
        <SimpleGrid columns={{ base: 1, md: 2 }} spacing={4}>
          <FormControl>
            <FormLabel fontSize="sm">D√≠as de gracia para devoluci√≥n</FormLabel>
            <Select
              value={settings.variables.diasGraciaDevolucion}
              onChange={(e) => onVariableChange('diasGraciaDevolucion', parseInt(e.target.value))}
            >
              <option value="1">1 d√≠a</option>
              <option value="2">2 d√≠as</option>
              <option value="3">3 d√≠as</option>
              <option value="5">5 d√≠as</option>
              <option value="7">7 d√≠as</option>
            </Select>
            <Text fontSize="xs" color="gray.600" mt={1}>
              D√≠as adicionales despu√©s del fin de actividad para devolver material
            </Text>
          </FormControl>

          {/* ...existing code... */}
          <FormControl>
            <FormLabel fontSize="sm">D√≠as m√°ximos de retraso</FormLabel>
            <Select
              value={settings.variables.diasMaximoRetraso}
              onChange={(e) => onVariableChange('diasMaximoRetraso', parseInt(e.target.value))}
            >
              <option value="7">7 d√≠as</option>
              <option value="15">15 d√≠as</option>
              <option value="30">30 d√≠as</option>
              <option value="45">45 d√≠as</option>
            </Select>
            <Text fontSize="xs" color="gray.600" mt={1}>
              D√≠as m√°ximos de retraso antes de aplicar penalizaciones
            </Text>
          </FormControl>

          <FormControl>
            <FormLabel fontSize="sm">D√≠as de bloqueo por retraso grave</FormLabel>
            <Select
              value={settings.variables.diasBloqueoPorRetraso}
              onChange={(e) => onVariableChange('diasBloqueoPorRetraso', parseInt(e.target.value))}
            >
              <option value="15">15 d√≠as</option>
              <option value="30">30 d√≠as</option>
              <option value="60">60 d√≠as</option>
              <option value="90">90 d√≠as</option>
            </Select>
            <Text fontSize="xs" color="gray.600" mt={1}>
              D√≠as de bloqueo autom√°tico por retrasos graves
            </Text>
          </FormControl>

          <FormControl>
            <FormLabel fontSize="sm">Tiempo m√≠nimo entre pr√©stamos</FormLabel>
            <Select
              value={settings.variables.tiempoMinimoEntrePrestamos}
              onChange={(e) => onVariableChange('tiempoMinimoEntrePrestamos', parseInt(e.target.value))}
            >
              <option value="0">Sin restricci√≥n</option>
              <option value="1">1 d√≠a</option>
              <option value="2">2 d√≠as</option>
              <option value="7">7 d√≠as</option>
            </Select>
            <Text fontSize="xs" color="gray.600" mt={1}>
              Tiempo m√≠nimo entre pr√©stamos del mismo material
            </Text>
          </FormControl>
        </SimpleGrid>
      </CardBody>
    </Card>
  );
};

export default LoanManagementSection;
