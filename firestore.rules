rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Funciones auxiliares para verificar roles
    function isAdmin() {
      return request.auth != null && 
        get(/databases/$(database)/documents/usuarios/$(request.auth.uid)).data.rol == 'admin';
    }
    
    function isVocal() {
      return request.auth != null && 
        get(/databases/$(database)/documents/usuarios/$(request.auth.uid)).data.rol == 'vocal';
    }
    
    function isSocio() {
      return request.auth != null && 
        get(/databases/$(database)/documents/usuarios/$(request.auth.uid)).data.rol == 'socio';
    }
    
    function isAuthenticated() {
      return request.auth != null && 
        get(/databases/$(database)/documents/usuarios/$(request.auth.uid)).data.activo == true;
    }
    
    // Reglas para la colección de intentos de login
    match /loginAttempts/{docId} {
      // Permitir lectura/escritura para todos (necesario para verificar intentos sin autenticación)
      allow read, write: if true;
    }
    
    // Reglas para usuarios
    match /usuarios/{userId} {
      // Los usuarios pueden leer su propio perfil
      // Los administradores pueden leer todos los perfiles
      allow read: if request.auth != null && 
                    (request.auth.uid == userId || isAdmin());
      
      // Los usuarios pueden actualizar ciertos campos de su perfil
      // Los administradores pueden actualizar cualquier campo
      allow update: if request.auth != null && 
                     (request.auth.uid == userId || isAdmin());
      
      // Solo administradores pueden crear o eliminar usuarios
      allow create, delete: if isAdmin();
    }
    
    // Reglas para material (equipamiento)
    match /material/{itemId} {
      // Cualquier usuario autenticado puede ver el material
      allow read: if isAuthenticated();
      
      // Solo administradores y vocales pueden modificar el material
      allow write: if isAdmin() || isVocal();
    }
    
    // Reglas para actividades
    match /actividades/{actividadId} {
      // Cualquier usuario activo puede ver actividades
      allow read: if isAuthenticated();
      
      // Solo admins y vocales pueden crear/modificar actividades
      allow write: if isAdmin() || isVocal();
    }
    
    // Reglas para préstamos/reservas
    match /prestamos/{prestamoId} {
      // Los usuarios pueden ver sus propios préstamos
      // Admins y vocales pueden ver todos los préstamos
      allow read: if isAuthenticated() && 
                    (resource.data.usuarioId == request.auth.uid || 
                     isAdmin() || isVocal());
      
      // Usuarios pueden crear préstamos, pero solo admins/vocales pueden modificarlos
      allow create: if isAuthenticated();
      allow update, delete: if isAdmin() || isVocal();
    }
    
    // Reglas para conversaciones de mensajería
    match /conversaciones/{conversacionId} {
      // Los usuarios pueden leer conversaciones donde participan
      allow read: if isAuthenticated() && 
                    request.auth.uid in resource.data.participantes;
      
      // Los usuarios pueden crear conversaciones (se valida participación en el código)
      allow create: if isAuthenticated() && 
                      request.auth.uid in request.resource.data.participantes;
      
      // Solo participantes y admins pueden modificar conversaciones
      allow update: if isAuthenticated() && 
                      (request.auth.uid in resource.data.participantes || isAdmin());
      
      // Solo admins pueden eliminar conversaciones
      allow delete: if isAdmin();
    }
      // Reglas para mensajes
    match /mensajes/{mensajeId} {
      // Los usuarios pueden leer mensajes de conversaciones donde participan
      allow read: if isAuthenticated() && 
                    request.auth.uid in get(/databases/$(database)/documents/conversaciones/$(resource.data.conversacionId)).data.participantes;
      
      // Los usuarios autenticados pueden crear mensajes (validación en el código)
      // Simplificamos esta regla para evitar consultas anidadas que pueden causar cuelgues
      allow create: if isAuthenticated() && 
                      request.auth.uid == request.resource.data.remitenteId;
      
      // Solo el remitente puede editar/eliminar sus propios mensajes (o admins)
      allow update, delete: if isAuthenticated() && 
                              (request.auth.uid == resource.data.remitenteId || isAdmin());
    }
    
    // Reglas para participantes de conversaciones
    match /participantesConversacion/{participanteId} {
      // Los usuarios pueden leer su propia participación
      allow read: if isAuthenticated() && 
                    request.auth.uid == resource.data.usuarioId;
      
      // Solo se permite crear participaciones para el usuario actual
      allow create: if isAuthenticated() && 
                      request.auth.uid == request.resource.data.usuarioId;
      
      // Los usuarios pueden actualizar su propia configuración de participación
      allow update: if isAuthenticated() && 
                      request.auth.uid == resource.data.usuarioId;
      
      // Solo admins pueden eliminar participaciones
      allow delete: if isAdmin();
    }
    
    // Regla por defecto - restringir acceso
    match /{document=**} {
      // Para producción: denegar acceso por defecto
      // Para desarrollo: permitir todo (comenta/descomenta según necesites)
      
      // Opción desarrollo (permite todo)
      allow read, write: if true;
      
      // Opción producción (deniega por defecto)
      // allow read, write: if false;
    }
  }
}